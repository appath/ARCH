# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Default colors console
if [ "$TERM" = "linux" ]; then
    echo -en "\e]P00a0f0d" #black
    echo -en "\e]P8567366" #darkgrey
    echo -en "\e]P1134f4b" #darkred
    echo -en "\e]P9134f4b" #red
    echo -en "\e]P2fcfefe" #darkgreen
    echo -en "\e]PAfcfefe" #green
    echo -en "\e]P37ea298" #brown
    echo -en "\e]PB7ea298" #yellow
    echo -en "\e]P41E7D77" #darkblue
    echo -en "\e]PC626E68" #blue
    echo -en "\e]P5134f4b" #darkmagenta
    echo -en "\e]PD1D7872" #magenta
    echo -en "\e]P61db5a2" #darkcyan
    echo -en "\e]PE1db5a2" #cyan
    echo -en "\e]P7d0d1d2" #lightgrey
    echo -en "\e]PFd0d1d2" #white
    clear #for background artifacting
fi

#
alias ls='ls --color=auto'
alias cls='printf "\033c"'
alias dir='dir --color=auto'
alias grep='grep --colour=auto'

#
export LANG='en_US.UTF-8'
export VISUAL='vim'

# Prompt colors
RESETCOLOR='\e[0m'
COLOR1='\e[5;75m'
COLOR2='\e[5;220m'
COLOR3='\e[5;214m'
COLOR4='\e[5;148m'
RCOLOR2='\e[5;202m'
RCOLOR3='\e[5;220m'
RCOLOR4='\e[5;214m'

# Bash prompt export (root, user)
if [[ $(id -u) -eq 0 ]]; then
    export PS1="${COLOR1}\W${RCOLOR2}>${RCOLOR3}>${RCOLOR4}>${RESETCOLOR}"
else
    export PS1="${}\W${}>${}>${}>${}"
fi

# Path NodeJS
#PATH="/root/.build/node-v14.16.0/bin:$PATH"

# Unpacking of all types of archives
unpack () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2) tar xvjf $1 ;;
            *.tar.gz) tar xvzf $1 ;;
            *.tar.xz) tar xvJf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) unrar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xvf $1 ;;
            *.tbz2) tar xvjf $1 ;;
            *.tgz) tar xvzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *.xz) unxz $1 ;;
            *) echo "\`$1': Unknown method of file compression" ;;
        esac
    else
        echo "\`$1' no foud"
    fi
}

